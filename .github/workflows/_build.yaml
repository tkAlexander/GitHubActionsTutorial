name: Test

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      role-to-assume:
        required: true
        type: string
      region:
        required: true
        type: string
      account-id:
        required: true
        type: string
      repository:
        required: true
        type: string
#      tags:
#        required: false
#        default: ''
      push:
        required: false
        type: boolean
        default: false

jobs:
  list-versions:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.account-id }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ inputs.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          aws-region: ${{ inputs.region }}
      -
        name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.account-id }}.dkr.ecr.${{ inputs.region }}.amazonaws.com
      -
        name: Build and load
        uses: docker/build-push-action@v5
        with:
          build-args: |
            AWS_ACCOUNT_ID=${{ inputs.account-id }}
            AWS_SECRET_ACCESS_KEY
            AWS_ACCESS_KEY_ID
            AWS_SESSION_TOKEN
          context: ./${{ inputs.version }}
          load: true
          tags: ${{ inputs.repository }}:${{ inputs.version }}
      -
        name: Test
        run: |
          docker run --rm --name rabbitmq-${{ inputs.version }} \
            --health-cmd='rabbitmq-diagnostics -q ping' \
            --health-interval=5s \
            --health-timeout=5s \
            --health-retries=10 \
            -d ${{ inputs.repository }}:${{ inputs.version }}
          docker ps
          docker stop rabbitmq-${{ inputs.version }}
      -
        name: Set platform
        run: |
          cd ./${{ inputs.version }}
          echo "PLATFORM=$(cat .platform)" >> "$GITHUB_ENV"     
      -
        name: Build
        uses: docker/build-push-action@v5
        with:
          build-args: |
            AWS_ACCOUNT_ID=${{ inputs.account-id }}
            AWS_SECRET_ACCESS_KEY
            AWS_ACCESS_KEY_ID
            AWS_SESSION_TOKEN
          context: ./${{ inputs.version }}
          platforms: ${{ env.PLATFORM }}
          push: ${{ inputs.push }}
#          tags: ${{ inputs.account-id }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ inputs.repository }}:${{ inputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
