AWSTemplateFormatVersion: 2010-09-09

Description: Configuring IAM to trust GitHub

Parameters:
  
  GitHubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String

  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String

  ECRRepositoryName:
    Description: Name of AWS ECR repository (case sensitive)
    Type: String

  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider. (optional)
    Default: ""
    Type: String
    
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: "sts.amazonaws.com"
    Type: String

Conditions:
  
  CreateOIDCProvider: !Equals 
    - !Ref OIDCProviderArn
    - ""

Resources:

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ECRRepositoryName
      LifecyclePolicy:
        LifecyclePolicyText: | # This must be JSON
          {
            "rules": [
              {
                "rulePriority": 10,
                "description": "Remove untagged images after 5 days.",
                "selection": {
                  "tagStatus": "untagged",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 5
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  GitHubActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      Policies:
        - PolicyName: enterprise-rabbitmq-github-action
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - ecr:GetAuthorizationToken
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ecr:*:${AWS::AccountId}:repository/${ECRRepositoryName}
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

Outputs:
  OIDCProviderArn:
    Condition: CreateOIDCProvider
    Value: !GetAtt GithubOidc.Arn
  GitHubActionRole:
    Value: !GetAtt GitHubActionRole.Arn
